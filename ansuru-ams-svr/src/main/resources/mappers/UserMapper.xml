<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ansuru.ams.svr.user.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ansuru.ams.svr.user.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="hired_dt" property="hiredDt" jdbcType="TIMESTAMP" />
    <result column="fired_dt" property="firedDt" jdbcType="TIMESTAMP" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="delete_flag" property="deleteFlag" jdbcType="CHAR" />
    <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="created_name" property="createdName" jdbcType="VARCHAR" />
    <result column="modified_dt" property="modifiedDt" jdbcType="TIMESTAMP" />
    <result column="modified_name" property="modifiedName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, nickname, password, realname, hired_dt, fired_dt, avatar, note, delete_flag, 
    created_dt, created_name, modified_dt, modified_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ansuru.ams.svr.user.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ansuru.ams.svr.user.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ansuru.ams.svr.user.entity.User" useGeneratedKeys="true" keyProperty="id" >
    insert into user (nickname, password, realname, 
      hired_dt, fired_dt, avatar, 
      note, delete_flag, created_dt, 
      created_name, modified_dt, modified_name
      )
    values (#{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{hiredDt,jdbcType=TIMESTAMP}, #{firedDt,jdbcType=TIMESTAMP}, #{avatar,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=CHAR}, #{createdDt,jdbcType=TIMESTAMP}, 
      #{createdName,jdbcType=VARCHAR}, #{modifiedDt,jdbcType=TIMESTAMP}, #{modifiedName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ansuru.ams.svr.user.entity.User" useGeneratedKeys="true" keyProperty="id" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="hiredDt != null" >
        hired_dt,
      </if>
      <if test="firedDt != null" >
        fired_dt,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createdDt != null" >
        created_dt,
      </if>
      <if test="createdName != null" >
        created_name,
      </if>
      <if test="modifiedDt != null" >
        modified_dt,
      </if>
      <if test="modifiedName != null" >
        modified_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="hiredDt != null" >
        #{hiredDt,jdbcType=TIMESTAMP},
      </if>
      <if test="firedDt != null" >
        #{firedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="createdDt != null" >
        #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdName != null" >
        #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDt != null" >
        #{modifiedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedName != null" >
        #{modifiedName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ansuru.ams.svr.user.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredDt != null" >
        hired_dt = #{record.hiredDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.firedDt != null" >
        fired_dt = #{record.firedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=CHAR},
      </if>
      <if test="record.createdDt != null" >
        created_dt = #{record.createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdName != null" >
        created_name = #{record.createdName,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedDt != null" >
        modified_dt = #{record.modifiedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedName != null" >
        modified_name = #{record.modifiedName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      hired_dt = #{record.hiredDt,jdbcType=TIMESTAMP},
      fired_dt = #{record.firedDt,jdbcType=TIMESTAMP},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=CHAR},
      created_dt = #{record.createdDt,jdbcType=TIMESTAMP},
      created_name = #{record.createdName,jdbcType=VARCHAR},
      modified_dt = #{record.modifiedDt,jdbcType=TIMESTAMP},
      modified_name = #{record.modifiedName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ansuru.ams.svr.user.entity.User" >
    update user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="hiredDt != null" >
        hired_dt = #{hiredDt,jdbcType=TIMESTAMP},
      </if>
      <if test="firedDt != null" >
        fired_dt = #{firedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=CHAR},
      </if>
      <if test="createdDt != null" >
        created_dt = #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdName != null" >
        created_name = #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDt != null" >
        modified_dt = #{modifiedDt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedName != null" >
        modified_name = #{modifiedName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ansuru.ams.svr.user.entity.User" >
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      hired_dt = #{hiredDt,jdbcType=TIMESTAMP},
      fired_dt = #{firedDt,jdbcType=TIMESTAMP},
      avatar = #{avatar,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=CHAR},
      created_dt = #{createdDt,jdbcType=TIMESTAMP},
      created_name = #{createdName,jdbcType=VARCHAR},
      modified_dt = #{modifiedDt,jdbcType=TIMESTAMP},
      modified_name = #{modifiedName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>